#ifndef BABYLON_SHADERS_LENS_HIGHLIGHTS_FRAGMENT_FX_H
#define BABYLON_SHADERS_LENS_HIGHLIGHTS_FRAGMENT_FX_H

namespace BABYLON {

extern const char* lensHighlightsPixelShader;

const char* lensHighlightsPixelShader
  = "// samplers\n"
    "uniform sampler2D textureSampler;  // original color\n"
    "\n"
    "// uniforms\n"
    "uniform float gain;\n"
    "uniform float threshold;\n"
    "uniform float screen_width;\n"
    "uniform float screen_height;\n"
    "\n"
    "// varyings\n"
    "varying vec2 vUV;\n"
    "\n"
    "// apply luminance filter\n"
    "vec4 highlightColor(vec4 color) {\n"
    "  vec4 highlight = color;\n"
    "  float luminance = dot(highlight.rgb, vec3(0.2125, 0.7154, 0.0721));\n"
    "  float lum_threshold;\n"
    "  if (threshold > 1.0) { lum_threshold = 0.94 + 0.01 * threshold; }\n"
    "  else { lum_threshold = 0.5 + 0.44 * threshold; }\n"
    "\n"
    "  luminance = clamp((luminance - lum_threshold) * (1.0 / (1.0 - lum_threshold)), 0.0, 1.0);\n"
    "\n"
    "  highlight *= luminance * gain;\n"
    "  highlight.a = 1.0;\n"
    "\n"
    "  return highlight;\n"
    "}\n"
    "\n"
    "void main(void)\n"
    "{\n"
    "  vec4 original = texture2D(textureSampler, vUV);\n"
    "\n"
    "  // quick exit if no highlight computing\n"
    "  if (gain == -1.0) {\n"
    "  gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n"
    "  return;\n"
    "  }\n"
    "\n"
    "  float w = 2.0 / screen_width;\n"
    "  float h = 2.0 / screen_height;\n"
    "\n"
    "  float weight = 1.0;\n"
    "\n"
    "  // compute blurred color\n"
    "  vec4 blurred = vec4(0.0, 0.0, 0.0, 0.0);\n"
    "\n"
    "#ifdef PENTAGON\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.84*w, 0.43*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.48*w, -1.29*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.61*w, 1.51*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.55*w, -0.74*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.71*w, -0.52*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.94*w, 1.59*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.40*w, -1.87*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.62*w, 1.16*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.09*w, 0.25*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.46*w, -1.71*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.08*w, 2.42*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.85*w, -1.89*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.89*w, 0.16*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.29*w, 1.88*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.40*w, -2.81*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.54*w, 2.26*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.60*w, -0.61*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.31*w, -1.30*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.83*w, 2.53*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.12*w, -2.48*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.60*w, 1.11*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.82*w, 0.99*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.50*w, -2.81*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.85*w, 3.33*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.94*w, -1.92*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.27*w, -0.53*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.95*w, 2.48*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.23*w, -3.04*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.17*w, 2.05*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.97*w, -0.04*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.25*w, -2.00*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.31*w, 3.08*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.94*w, -2.59*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.37*w, 0.64*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.13*w, 1.93*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.03*w, -3.65*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.60*w, 3.17*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.14*w, -1.19*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.00*w, -1.19*h)));\n"
    "#else\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.85*w, 0.36*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.52*w, -1.14*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.46*w, 1.42*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.46*w, -0.83*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.79*w, -0.42*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.11*w, 1.62*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.29*w, -2.07*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.69*w, 1.39*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.28*w, 0.12*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.65*w, -1.69*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.08*w, 2.44*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.63*w, -1.90*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.55*w, 0.31*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.13*w, 1.52*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.56*w, -2.61*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.38*w, 2.34*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.64*w, -0.81*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.53*w, -1.21*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.06*w, 2.63*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.00*w, -2.69*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.59*w, 1.32*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.82*w, 0.78*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.57*w, -2.50*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.54*w, 2.93*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.39*w, -1.81*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.01*w, -0.28*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.04*w, 2.25*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.02*w, -3.05*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.09*w, 2.25*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.07*w, -0.25*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.44*w, -1.90*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.52*w, 3.05*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.68*w, -2.61*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.01*w, 0.79*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.76*w, 1.46*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.05*w, -2.94*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.21*w, 2.88*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.84*w, -1.30*h)));\n"
    "  blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.98*w, -0.96*h)));\n"
    "#endif\n"
    "\n"
    "  blurred /= 39.0;\n"
    "\n"
    "  gl_FragColor = blurred;\n"
    "\n"
    "  //if(vUV.x > 0.5) { gl_FragColor.rgb *= 0.0; }\n"
    "}\n";

} // end of namespace BABYLON

#endif // end of BABYLON_SHADERS_LENS_HIGHLIGHTS_FRAGMENT_FX_H
