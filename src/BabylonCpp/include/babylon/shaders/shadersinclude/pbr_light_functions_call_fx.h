#ifndef BABYLON_SHADERS_SHADERS_INCLUDE_PBR_LIGHT_FUNCTIONS_CALL_FX_H
#define BABYLON_SHADERS_SHADERS_INCLUDE_PBR_LIGHT_FUNCTIONS_CALL_FX_H

namespace BABYLON {

extern const char* pbrLightFunctionsCall;

const char* pbrLightFunctionsCall
  = "#ifdef LIGHT{X}\n"
    "  #if defined(LIGHTMAP) && defined(LIGHTMAPEXCLUDED{X}) && defined(LIGHTMAPNOSPECULAR{X})\n"
    "  //No light calculation\n"
    "  #else\n"
    "  #ifndef SPECULARTERM\n"
    "  vec3 vLightSpecular{X} = vec3(0.0);\n"
    "  #endif\n"
    "  #ifdef SPOTLIGHT{X}\n"
    "  info = computeSpotLighting(viewDirectionW, normalW, vLightData{X}, vLightDirection{X}, vLightDiffuse{X}.rgb, vLightSpecular{X}, vLightDiffuse{X}.a, roughness, NdotV, specularEnvironmentR90, NdotL);\n"
    "  #endif\n"
    "  #ifdef HEMILIGHT{X}\n"
    "  info = computeHemisphericLighting(viewDirectionW, normalW, vLightData{X}, vLightDiffuse{X}.rgb, vLightSpecular{X}, vLightGround{X}, roughness, NdotV, specularEnvironmentR90, NdotL);\n"
    "  #endif\n"
    "  #if defined(POINTLIGHT{X}) || defined(DIRLIGHT{X})\n"
    "  info = computeLighting(viewDirectionW, normalW, vLightData{X}, vLightDiffuse{X}.rgb, vLightSpecular{X}, vLightDiffuse{X}.a, roughness, NdotV, specularEnvironmentR90, NdotL);\n"
    "  #endif\n"
    "  #endif\n"
    "  \n"
    "  #ifdef SHADOW{X}\n"
    "  #ifdef SHADOWVSM{X}\n"
    "  notShadowLevel = computeShadowWithVSM(vPositionFromLight{X}, shadowSampler{X}, shadowsInfo{X}.z, shadowsInfo{X}.x);\n"
    "  #else\n"
    "  #ifdef SHADOWPCF{X}\n"
    "  #if defined(POINTLIGHT{X})\n"
    "  notShadowLevel = computeShadowWithPCFCube(vLightData{X}.xyz, shadowSampler{X}, shadowsInfo{X}.y, shadowsInfo{X}.z, shadowsInfo{X}.x);\n"
    "  #else\n"
    "  notShadowLevel = computeShadowWithPCF(vPositionFromLight{X}, shadowSampler{X}, shadowsInfo{X}.y, shadowsInfo{X}.z, shadowsInfo{X}.x);\n"
    "  #endif\n"
    "  #else\n"
    "  #if defined(POINTLIGHT{X})\n"
    "  notShadowLevel = computeShadowCube(vLightData{X}.xyz, shadowSampler{X}, shadowsInfo{X}.x, shadowsInfo{X}.z);\n"
    "  #else\n"
    "  notShadowLevel = computeShadow(vPositionFromLight{X}, shadowSampler{X}, shadowsInfo{X}.x, shadowsInfo{X}.z);\n"
    "  #endif\n"
    "  #endif\n"
    "  #endif\n"
    "  #else\n"
    "  notShadowLevel = 1.;\n"
    "  #endif\n"
    "  \n"
    "  #if defined(LIGHTMAP) && defined(LIGHTMAPEXCLUDED{X})\n"
    "  lightDiffuseContribution += lightmapColor * notShadowLevel;\n"
    "  \n"
    "  #ifdef SPECULARTERM\n"
    "  #ifndef LIGHTMAPNOSPECULAR{X}\n"
    "  lightSpecularContribution += info.specular * notShadowLevel * lightmapColor;\n"
    "  #endif\n"
    "  #endif\n"
    "  #else\n"
    "  lightDiffuseContribution += info.diffuse * notShadowLevel;\n"
    "  \n"
    "  #ifdef OVERLOADEDSHADOWVALUES\n"
    "  if (NdotL < 0.000000000011)\n"
    "  {\n"
    "  notShadowLevel = 1.;\n"
    "  }\n"
    "  shadowedOnlyLightDiffuseContribution *= notShadowLevel;\n"
    "  #endif\n"
    "\n"
    "  #ifdef SPECULARTERM\n"
    "  lightSpecularContribution += info.specular * notShadowLevel;\n"
    "  #endif\n"
    "  #endif\n"
    "#endif\n";

} // end of namespace BABYLON

#endif // end of BABYLON_SHADERS_SHADERS_INCLUDE_PBR_LIGHT_FUNCTIONS_CALL_FX_H
